#include<iostream>
#include<string.h>

using namespace std;
int res, m, n, len, i, j, k, tab[1000];

void shift(char p[]) {
    len = strlen(p);
    for (i = 0; i <= 1000; i++)
        tab[i] = len;
    for (j = 0; j <= len - 2; j++)
        tab[p[j]] = len - 1 - j;
}

int horspool(char p[], char t[]) {
    shift(p);
    m = strlen(p);
    n = strlen(t);
    i = m - 1;
    while (i <= n - 1) {
        k = 0;
        while ((k <= m - 1)&&(p[m - 1 - k] == t[i - k]))
            k++;
        if (k == m)
            return (i - m + 1);
        else
            i = i + tab[t[i]];
    }
    return -1;
}

int main() {
    char str[100], ptr[20];
    cout << "\n enter the text";
    cin>>str;
    cout << "\n enter pattern";
    cin>>ptr;
    res = horspool(ptr, str);
    if (res == -1)
        cout << "string pattern not found";
    else
        cout << "string pattern found at position" << res + 1 << "\n";
    return 0;
}



#include<iostream>
using namespace std;
int c[10][10];

int min(int i, int k) {
    if (i < k)
        return i;
    return k;
}

void bincoff(int n, int k) {
    int i, j;
    for (i = 0; i <= n; i++) {
        for (j = 0; j <= min(i, k); j++) {
            if (j == 0 || i == j)
                c[i][j] = 1;
            else
                c[i][j] = c[i - 1][j - 1] + c[i - 1][j];
        }
    }
    cout << "result is:";
    cout << " " << c[n][k] << "\n";
}

int main() {
    int n, k, i, j;
    cout << "enter the value of 'n':";
    cin>>n;
    cout << "enter the value of 'k'(k<=n):";
    cin>>k;
    if (k > n) {
        cout << "invalid value of 'k'\n";
        return 0;
    }
    bincoff(n, k);
    return 0;
}
